# Generated by Django 4.0.3 on 2022-04-07 13:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('libraries', '0001_initial'),
        ('subjects', '0001_initial'),
        ('organizations', '0001_initial'),
        ('careers', '0001_initial'),
        ('language', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LibrarianProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MentorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_video_url', models.TextField(null=True)),
                ('approval_status', models.CharField(choices=[('Approved', 'Approved'), ('Not Reviewed', 'Not Reviewed'), ('Rejected', 'Rejected')], default='Not Reviewed', max_length=30)),
                ('has_viewed_donation_page', models.BooleanField(default=False)),
                ('has_completed_training', models.BooleanField(default=False)),
                ('has_clicked_facebook_workplace_invite', models.BooleanField(default=False)),
                ('interests', models.TextField(null=True)),
                ('phone_number', models.CharField(max_length=255, null=True)),
                ('secondary_email', models.CharField(max_length=255, null=True)),
                ('assigned_library', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='libraries.library')),
                ('careers', models.ManyToManyField(related_name='+', to='careers.career')),
                ('mentoring_languages', models.ManyToManyField(related_name='+', to='language.language')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.organization')),
                ('subjects', models.ManyToManyField(related_name='+', to='subjects.subject')),
            ],
        ),
    ]
