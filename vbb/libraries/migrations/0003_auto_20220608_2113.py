# Generated by Django 3.2.13 on 2022-06-08 21:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('libraries', '0002_library_library_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueID', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=1024)),
                ('mac_address', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('is_reserved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryComputerSlots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueID', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('day', models.IntegerField(choices=[(0, 'Sunday'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday')], default=0)),
                ('start_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('start_recurring', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_recurring', models.DateTimeField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'Library Computer Slots',
            },
        ),
        migrations.AddField(
            model_name='library',
            name='address_1',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='address_2',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='city',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='country',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='notes',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='poBoxNumber',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='postal_code',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='state_province',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='library',
            name='status',
            field=models.IntegerField(choices=[(0, 'active'), (1, 'inactive'), (2, 'closed')], default=0),
        ),
        migrations.CreateModel(
            name='UserPreferenceSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueID', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('start_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('start_recurring', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_recurring', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('computer_slot', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preference_slot', to='libraries.librarycomputerslots')),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preference_mentor', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preference_student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preference Slots',
            },
        ),
        migrations.AddField(
            model_name='librarycomputerslots',
            name='library',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libraries.library'),
        ),
        migrations.CreateModel(
            name='ComputerReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueID', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('reserved_date', models.DateTimeField(auto_now_add=True)),
                ('reserve_status', models.IntegerField(choices=[(0, 'Upcoming'), (1, 'In Session'), (2, 'Completed'), (3, 'Cancelled'), (4, 'Other')], default=0, null=True)),
                ('transaction_id', models.CharField(max_length=255, unique=True)),
                ('start_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('student_attended', models.BooleanField(default=False)),
                ('mentor_attended', models.BooleanField(default=False)),
                ('transcript_file', models.CharField(blank=True, max_length=255, null=True)),
                ('meetingID', models.CharField(blank=True, max_length=255, null=True)),
                ('conferenceURL', models.CharField(blank=True, max_length=1024, null=True)),
                ('computer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libraries.computer')),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_mentor', to=settings.AUTH_USER_MODEL)),
                ('reserved_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='libraries.librarycomputerslots')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ComputerReservation',
            },
        ),
        migrations.AddField(
            model_name='computer',
            name='library',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libraries.library'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueID', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('display_start', models.DateTimeField(blank=True, default=None, null=True)),
                ('display_end', models.DateTimeField(blank=True, default=None, null=True)),
                ('notes', models.TextField()),
                ('library', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='libraries.library')),
            ],
        ),
    ]
